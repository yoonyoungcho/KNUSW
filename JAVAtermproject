package termpjt;

import java.util.*;
import java.io.*;

class signin
{	
	String [] userID = null;
    String newuserID;
    ArrayList<String> signinID = new ArrayList<String>();
    
    String [] userPW = null;
    String newuserPW;
    ArrayList<String> signinPW = new ArrayList<String>();
    
    String [] username = null;
    String newusername;
    ArrayList<String> signinname = new ArrayList<String>();
    
    public signin() {}
    
	public void signinID() throws IOException {
        PrintWriter pw = new PrintWriter(new FileWriter("d:/out.txt", true));
        Scanner s = new Scanner(System.in);
        BufferedReader br = new BufferedReader(new FileReader("d:/out.txt"));
        
        String line = null;
        
        while(true) {
        	 line = br.readLine();
            if (line==null) break;
            signinID.add(line);
            userID = signinID.toArray(new String[signinID.size()]);
        }
        
        System.out.println("ID를 입력해주세요.");
		newuserID = s.next();
		
		for(int i=0;i<userID.length;i++)
		{
			for(;newuserID.equals(userID[i]);)
			{
				System.out.println("이미 등록된 ID입니다. 다른 ID를 입력해주세요.");
				newuserID = s.next();				
				i = 0;
			}
		}
		
		System.out.println("ID를 등록 성공하였습니다.");
		signinID.add(newuserID);
		pw.println(newuserID);

        pw.close();
        br.close();
    }
	
	public void signinPW() throws IOException {
        PrintWriter pw = new PrintWriter(new FileWriter("d:/out2.txt", true));
        Scanner s = new Scanner(System.in);
        BufferedReader br = new BufferedReader(new FileReader("d:/out2.txt"));
        
        String line = null;
        
        while(true) {
        	 line = br.readLine();
            if (line==null) break;
            signinPW.add(line);
            userPW = signinPW.toArray(new String[signinPW.size()]);
        }
        
        System.out.println("비밀번호를 입력해주세요.");
		newuserPW = s.next();
		
		System.out.println("비밀번호를 등록 성공하였습니다.");
		signinPW.add(newuserPW);
		pw.println(newuserPW);

        pw.close();
        br.close();
    }
	
	 public void signinNAME() throws IOException {
	        PrintWriter PW = new PrintWriter(new FileWriter("d:/out3.txt", true));
	        Scanner s = new Scanner(System.in);
	        BufferedReader br = new BufferedReader(new FileReader("d:/out3.txt"));
	       
	        String line = null;
	        
	        while(true) {
	        	 line = br.readLine();
	            if (line==null) break;
	            signinname.add(line);
	            username = signinname.toArray(new String[signinname.size()]);
	        }
	        
	        System.out.println("성함을 입력해주세요.");
			newusername = s.next();
			
			System.out.println("성함을 등록 성공하였습니다.");
			signinname.add(newusername);
			PW.println(newusername);

			PW.close();
	        br.close();
	    }
}

class log{
	public log()
	{
		
	}
	
	public void login() throws IOException
	{
		Scanner s = new Scanner(System.in);
        BufferedReader br = new BufferedReader(new FileReader("d:/out.txt"));
        BufferedReader br2 = new BufferedReader(new FileReader("d:/out2.txt"));
        BufferedReader br3 = new BufferedReader(new FileReader("d:/out3.txt"));
       
        String[] username = null;
        String [] userID = null;
        String[] userPW = null;
        ArrayList<String> signedinNAME = new ArrayList<String>();
        ArrayList<String> signedinID = new ArrayList<String>();
        ArrayList<String> signedinPW = new ArrayList<String>();
		String inputuserID = null;
		String inputuserPW = null;
		String line = null;
		
		int correctID = 0;
		int whatisi = 0;
		
		while(true) {
       	 line = br.readLine();
           if (line==null) break;
           signedinID.add(line);
           userID = signedinID.toArray(new String[signedinID.size()]);
       }
		
		while(true) {
	       	 line = br2.readLine();
	           if (line==null) break;
	           signedinPW.add(line);
	           userPW = signedinPW.toArray(new String[signedinPW.size()]);
	       }
		
		while(true) {
	       	 line = br3.readLine();
	           if (line==null) break;
	           signedinNAME.add(line);
	           username = signedinNAME.toArray(new String[signedinNAME.size()]);
	       }
		
		System.out.println("<스마트폰 구매 프로그램>");
		System.out.println("회원이십니까?(y/n)");
		
		String ans = s.next();
		char a = ans.charAt(0);
		
		for(;a!='y' && a!='n';)
		{
			System.out.println("회원이시면  y, 회원이 아니시면 n을 입력해주세요.");
			ans = s.next();
			a = ans.charAt(0);
		}
		
		if(a=='y')
		{
			System.out.println("ID와 비밀번호를 입력하세요.");
			System.out.print("ID: ");
			inputuserID = s.next(); //ID 입력받음
			
			for(int i=0;i<userID.length;i++) //ID 체크
			{
				if(inputuserID.equals(userID[i]))
				{
					correctID++;
					whatisi = i;
				}
				else
					continue;
			}	
			
			if(correctID > 0)
			{
				System.out.println("Password: ");
				inputuserPW = s.next();
				
				while(!(inputuserPW.equals(userPW[whatisi])))
				{
					System.out.println("비밀번호가 다릅니다. 다시 입력하세요.");
					inputuserPW = s.next();
				}
				System.out.println(username[whatisi]+"님이 로그인하셨습니다.");
			}
			
			else
			{
				System.out.println("입력하신 ID가 존재하지 않습니다.");
				login();
			}
		}
		
		else
		{
			signin newsign = new signin();
			
			newsign.signinID();
			newsign.signinPW();
			newsign.signinNAME();
			
			login();
		}
		
	} //login
}//class log

class smp
{
	public smp() {}
	
	public String[][] smp = {{"갤럭시 s7","제조업체: 삼성전자 ","가격: 출고가 836000원 ","화면크기: 5.1인치 ","디스플레이 :Super AMOLED ","운영체제: 안드로이드  ","메모리: 32GB","구매자 평점: 4.5 ","색상 종류: 핑크골드, 실버티타늄, 블랙오닉스, 골드플래티넘, 화이트펄"},
			  {"갤럭시 노트5","제조업체: 삼성전자","가격:출고가 899800원 ","화면크기: 5.7인치","디스플레이 :Super AMOLED ","운영체제: 안드로이드","메모리: 32GB/64GB","구매자 평점:4.6 ","색상 종류: 화이트펄, 골든플래티넘, 블랙사파이어, 실버티타늄, 핑크골드"},
			  {"G5","제조업체: LG전자 ","가격: 출고가 836000원","화면크기: 5.3인치","디스플레이 : QHD IPS 퀀텀","운영체제: 안드로이드","메모리: 32GB","구매자 평점: 4.5 ","색상 종류: 골드, 핑크, 실버, 티타늄"},
			  {"아이폰 6s ","제조업체: 애플 ","가격: 869000/999900/1130800원","화면크기: 4.7인치 ","디스플레이 : 레티나 디스플레이 ","운영체제: IOS 9.3","메모리: 16/64/128GB","구매자 평점: 4.7","색상 종류: 그레이, 실버, 골드, 로즈골드"}};
}

class select extends smp
{
	int n=0; //스마트폰 이름
	protected String color; //스마트폰 색상
	
	Scanner s = new Scanner(System.in);

	public select() {}
	
	public void select()
	{
		System.out.println("구매하고자 하는 스마트폰을 선택하세요.");
		for(int i=0;i<smp.length;i++)
		{
			System.out.println(i+1+"."+smp[i][0]); // 스마트폰 이름만 출력
		}
		
		String inputnum = s.next();
		n = Character.getNumericValue(inputnum.charAt(0));
		
		System.out.println(n+"번 "+smp[n-1][0]+"를 선택하셨습니다.");
		
		for(int i=0;i<smp[n-1].length; i++)
		{
			System.out.println(smp[n-1][i]);  // 스마트폰 스펙 출력
		}
		
		System.out.println("원하는 색상을 입력하세요.");
		color = s.next();     // 색상 입력 받기
	
		switch(n)
		{
		case 1:
			for(;!(color.matches("핑크골드")) && !(color.matches("실버티타늄")) && !(color.matches("골드플래티넘")) && !(color.matches("화이트펄")) && !(color.matches("블랙오닉스"));)
			{
				System.out.println("지원되지 않는 색상입니다.");
				System.out.println("원하는 색상을 입력하세요.");
				color = s.next();
			}
			break;
		case 2:
			for(;!(color.matches("핑크골드")) && !(color.matches("화이트펄")) && !(color.matches("골든플래티넘")) && !(color.matches("블랙사파이어")) && !(color.matches("실버티타늄"));)
			{
				System.out.println("지원되지 않는 색상입니다.");
				System.out.println("원하는 색상을 입력하세요.");
				color = s.next();
			}
			break;
		case 3:
			for(;!(color.matches("골드")) && !(color.matches("티타늄")) && !(color.matches("핑크")) && !(color.matches("실버")) && !(color.matches("블랙오닉스"));)
			{
				System.out.println("지원되지 않는 색상입니다.");
				System.out.println("원하는 색상을 입력하세요.");
				color = s.next();
			}
			break;
		case 4:
			for(;!(color.matches("그레이")) && !(color.matches("실버")) && !(color.matches("골드")) && !(color.matches("로즈골드"));)
			{
				System.out.println("지원되지 않는 색상입니다.");
				System.out.println("원하는 색상을 입력하세요.");
				color = s.next();
			}
			break;
		}
		
		System.out.println("위 기기를 구매하시겠습니까?(y/n)");
		
		char ans = s.next().charAt(0);
		
		for(;ans != 'y' && ans != 'n';)
		{
			System.out.println("구매를 원하시면 y를, 선택창으로 돌아가시려면 n을 입력해주세요.");
			System.out.println("위 기기를 구매하시겠습니까?(y/n)");
			ans = s.next().charAt(0);
		}
		
		if(ans == 'y')
		{
			Company c = new Company(color);
			c.selectNumber();
		}
		else if(ans == 'n')
		{
			this.select();
		}
	} // function select 닫음
} // class select 닫음

class Company extends select{	
	String feeName;
	int fee;
	String data;
	String etc;
	String pf;
	int k; // 통신사 이름
	int p; // 요금제 이름
	
	public Company()
	{
		
	}
	
	public Company(String c)
	{
		this.color = c;
	}
	
	public String getFeename()
	{
		return feeName;
	}
	
	public void selectNumber()
	{
		Scanner input = new Scanner(System.in);

		System.out.println("요금제를 선택하려면 1번, 스마트폰 선택화면으로 돌아가려면 2번을 눌러주세요.");
		//스마트폰 구매화면 => 스마트폰 선택화면 으로 모두 바꿈
		int n= input.nextInt();
		
		while(n!=1 && n!=2)
		{
			System.out.println("잘못된 번호를 입력하였습니다. 다시 입력하세요.");
			System.out.println("요금제를 선택하려면 1번, 스마트폰 선택화면으로 돌아가려면 2번을 눌러주세요.");
			n= input.nextInt();
		}
		
		if(n==1)
			selectCompany(); 
		else
			gotoPhone();	
	}
	
	public void gotoPhone()
	{ //스마트폰 구매로 돌아감
		select();
	}
	
	public void selectCompany()
	{
		System.out.println("통신사 목록");
		System.out.println("1. SK Telecom");
		System.out.println("2. LG U+");
		System.out.println("3. Olleh KT");
		System.out.println("4. 알뜰폰");
		System.out.print(">");
		Scanner input = new Scanner(System.in); 
		
		String inputnum = input.next();
		k = Character.getNumericValue(inputnum.charAt(0));
		
		if(k>=1 && k<=4)
		{
			selectFee();
		}
		else
		{
			while(k<1 || k>4)
			{
				System.out.println("잘못된 번호를 입력하였습니다. 다시 입력하세요.");					
				System.out.print(">");
				inputnum = input.next();
				k = Character.getNumericValue(inputnum.charAt(0));
			}
			selectFee();
		}
	}
	
	public void selectFee()
	{
		Scanner input = new Scanner(System.in);
		switch(k)
		{
			case 1:
			System.out.println("<요금제 목록>");
			SK[] sk = new SK[5];
			for(int i=0;i<sk.length;i++)
				sk[i]=new SK();
			sk[0].feeName="band 데이터 29";
			sk[0].fee=29900;
			sk[0].data="300 MB";
			sk[0].etc="집/이동전화 무제한, 문자 기본제공";
			sk[1].feeName="band 데이터 42";
			sk[1].fee=42000;
			sk[1].data="2.2 GB";
			sk[1].etc="집/이동전화 무제한, 문자 기본제공";
			sk[2].feeName="band 데이터 51";
			sk[2].fee=51000;
			sk[2].data="6.5 GB";
			sk[2].etc="집/이동전화 무제한, 문자 기본제공";
			sk[3].feeName="band 데이터 69";
			sk[3].fee=69000;
			sk[3].data="16 GB";
			sk[3].etc="집/이동전화 무제한, 문자 기본제공";
			sk[4].feeName="band 데이터 100";
			sk[4].fee=100000;
			sk[4].data="35 GB";
			sk[4].etc="집/이동전화 무제한, 문자 기본제공";
			
			for(int i=0;i<5;i++)
				System.out.println((i+1)+". "+sk[i].getFeename());
			
			System.out.print(">");
			String inputnum = input.next(); 
			p = Character.getNumericValue(inputnum.charAt(0));
			
			while(p<1 || p>5)
			{
				System.out.println("잘못된 번호를 입력하였습니다. 다시 입력하세요.");
				System.out.print(">");
				inputnum = input.next(); 
				p = Character.getNumericValue(inputnum.charAt(0));			}
			
			System.out.println(p+". "+sk[p-1].feeName+"\n"+"월정액: "+sk[p-1].fee+"원\n"+"데이터: "+sk[p-1].data+"\n"+"음성/문자: "+sk[p-1].etc);
			pf = sk[p-1].feeName + "(월 "+sk[p-1].fee+"원)";
			lastAnswer();
			break;
			
		case 2:
			System.out.println("<요금제 목록>");
			LGU[] lg = new LGU[5];
			for(int i=0;i<lg.length;i++)
				lg[i]=new LGU();
			
			lg[0].feeName="데이터 29.9";
			lg[0].fee=29900;
			lg[0].data="300 MB";
			lg[0].etc="300 MB";
			lg[1].feeName="데이터 41.9";
			lg[1].fee=41900;
			lg[1].data="2.3 GB";
			lg[1].etc="1.1 GB";
			lg[2].feeName="데이터 50.9";
			lg[2].fee=50900;
			lg[2].data="6.6 GB";
			lg[2].etc="3.3 GB";
			lg[3].feeName="데이터 68";
			lg[3].fee=68000;
			lg[3].data="데이터/비디오전용 데이터 합하여 11GB";
			lg[3].etc="1일 2GB이상 사용 이후 3Mbps 속도제공";
			lg[4].feeName="데이터 100";
			lg[4].fee=100000;
			lg[4].data="데이터/비디오전용 데이터 합하여 35GB";
			lg[4].etc="1일 2GB이상 사용 이후 3Mbps 속도제공";
			
			for(int i=0;i<5;i++)
				System.out.println((i+1)+". "+lg[i].getFeename());
			
			System.out.print(">");
			inputnum = input.next(); 
			p = Character.getNumericValue(inputnum.charAt(0));
			
			while(p<1 || p>5)
			{
				System.out.println("잘못된 번호를 입력하였습니다. 다시 입력하세요.");
				System.out.print(">");
				p= input.nextInt();
			}
			
			System.out.println(p+". "+lg[p-1].feeName+"\n"+"월정액: "+lg[p-1].fee+"원\n"+"데이터: "+lg[p-1].data+"\n"+"비디오전용 데이터사용: "+lg[p-1].etc);
			pf = lg[p-1].feeName + "(월 "+lg[p-1].fee+"원)";
			lastAnswer();
			break;
			
		case 3:
			System.out.println("<요금제 목록>");
			KT[] kt = new KT[5];
			
			for(int i=0;i<kt.length;i++)
				kt[i]=new KT();
			
			kt[0].feeName="데이터 299";
			kt[0].fee=29900;
			kt[0].data="300 MB";
			kt[0].etc="음성/문자 무제한, 영상/부가전화 30분";
			kt[1].feeName="데이터 449";
			kt[1].fee=44900;
			kt[1].data="3 GB(남은 데이터 다음달 이월, 다음달 데이터 가불 가능)";
			kt[1].etc="음성/문자 무제한, 영상/부가전화 30분";
			kt[2].feeName="데이터 599";
			kt[2].fee=59900;
			kt[2].data="10 GB";
			kt[2].etc="음성/문자 무제한, 영상/부가전화 200분";
			kt[3].feeName="데이터 699";
			kt[3].fee=69900;
			kt[3].data="15 GB";
			kt[3].etc="음성/문자 무제한, 영상/부가전화 200분";
			kt[4].feeName="데이터 999";
			kt[4].fee=99900;
			kt[4].data="30 GB";
			kt[4].etc="음성/문자 무제한, 영상/부가전화 200분";
			
			for(int i=0;i<5;i++)
				System.out.println((i+1)+". "+kt[i].getFeename());
			
			System.out.print(">");
			inputnum = input.next(); 
			p = Character.getNumericValue(inputnum.charAt(0));			
			
			while(p<1 || p>5)
			{
				System.out.println("잘못된 번호를 입력하였습니다. 다시 입력하세요.");
				System.out.print(">");
				p= input.nextInt();
			}
			
			System.out.println(p+". "+kt[p-1].feeName+"\n"+"월정액: "+kt[p-1].fee+"원\n"+"데이터: "+kt[p-1].data+"\n"+"음성/문자: "+kt[p-1].etc);
			pf = kt[p-1].feeName + "(월 "+kt[p-1].fee+"원)";
			lastAnswer();
			break;
			
		case 4:
			System.out.println("<요금제 목록>");
			Cheap[] ch = new Cheap[3];
			
			for(int i=0;i<ch.length;i++)
				ch[i]=new Cheap();
			
			ch[0].feeName="알뜰 50";
			ch[0].fee=4500;
			ch[0].data="데이터 제공 없이 사용 시 1 MB당 20.48원 과금 ";
			ch[0].etc="음성 70분, 문자 50건";
			ch[1].feeName="알뜰 무제한 19";
			ch[1].fee=19900;
			ch[1].data="1.1 GB(T-wifi 무료)";
			ch[1].etc="음성: 망내 무제한/망외 130분, 문자: 무제한";
			ch[2].feeName="알뜰 무제한 29";
			ch[2].fee=29900;
			ch[2].data="5 GB(T-wifi 무료)";
			ch[2].etc="음성: 망내 무제한/망외 280분, 문자: 무제한";
			
			for(int i=0;i<3;i++)
				System.out.println((i+1)+". "+ch[i].getFeename());			
			
			System.out.print(">");
			inputnum = input.next(); 
			p = Character.getNumericValue(inputnum.charAt(0));
		
			while(p<1 || p>3)
			{
				System.out.println("잘못된 번호를 입력하였습니다. 다시 입력하세요.");
				System.out.print(">");
				p= input.nextInt();
			}
			
			System.out.println(p+". "+ch[p-1].feeName+"\n"+"월정액: "+ch[p-1].fee+"원\n"+"데이터: "+ch[p-1].data+"\n"+"비디오전용 데이터사용: "+ch[p-1].etc);
			pf = ch[p-1].feeName + "(월 "+ch[p-1].fee+"원)";
			lastAnswer();
			break;
		
		default:
			lastAnswer();
			break;
		}
	}
	
	public void lastAnswer()
	{
		System.out.print("위 요금제를 사용하시겠습니까?(y/n)");
		Scanner input = new Scanner(System.in);
		String s = input.next();
		char a = s.charAt(0);
		
		while(!(a=='y' || a=='n'))
		{
			System.out.println("잘못 입력하였습니다. 다시 입력하세요.");
			System.out.print("위 요금제를 사용하시겠습니까?(y/n)");
			s = input.next();
			a = s.charAt(0);
		}
		
		if(a=='y')
			gotoFinal();
		else
			selectCompany();
	}
	
	public void gotoFinal()
	{
		Scanner s = new Scanner(System.in);
		
		System.out.println("구매 기기: "+smp[n][0]+" "+this.color+"("+smp[n][2]+")");
		System.out.println(pf);
		System.out.println("영수증을 출력하시겠습니까?(y/n)");

		String ans = s.next();
		char a = ans.charAt(0);
		
		while(!(a=='y' || a=='n'))
		{
			System.out.println("잘못 입력하였습니다. 다시 입력하세요.");
			System.out.print("영수증을 출력하시겠습니까?(y/n)");
			ans = s.next();
			a = ans.charAt(0);
		}
		
		if(a=='y')
		{
			System.out.println("영수증을 출력합니다. 스마트폰 구매를 완료하였습니다.");
			System.out.println("구매 기기: "+smp[n][0]+" "+super.color+"("+smp[n][2]+", VAT 10% 별도)");
			System.out.println(pf);
			System.out.println("로그아웃 하시려면 1번, 다른 제품 구매를 원하시면 2번을 누르세요.");
			
			int x = s.nextInt();
			for(;x!=1 && x!=2;)
			{
				System.out.println("로그아웃 하시려면 1번, 다른 제품 구매를 원하시면 2번을 누르세요.");
				x = s.nextInt();
			}
			if(x==1)
			{
				System.out.println("로그아웃 되었습니다.");
				System.out.println("프로그램을 종료합니다.");
				
			}
			else
			{
				select();
			}
		} //if 닫기
		else
		{
			System.out.println("로그아웃 하시려면 1번, 다른 제품 구매를 원하시면 2번을 누르세요.");
			int x = s.nextInt();
			for(;x!=1 && x!=2;)
			{
				System.out.println("로그아웃 하시려면 1번, 다른 제품 구매를 원하시면 2번을 누르세요.");
				x = s.nextInt();
			}
			if(x==1)
			{
				System.out.println("로그아웃 되었습니다.");
				System.out.println("프로그램을 종료합니다.");
			}
			else
			{
				select();
			}
		} //else 닫기
	} // void gotoFinal닫기
} // class company 닫기

class SK extends Company{}
class LGU extends Company{}
class KT extends Company{}
class Cheap extends Company{}

public class ddd {
	public static void main(String[] args) throws IOException
	{	
		log l = new log();
		l.login();
		select p = new select();
		p.select();
	}
}
